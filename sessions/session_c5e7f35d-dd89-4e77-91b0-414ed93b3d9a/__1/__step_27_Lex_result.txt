{"output":"## Component: WeightKnob\n\n### Purpose\n\nThe `WeightKnob` component is a custom web component that visually represents and allows interaction with the 'weight' of a musical prompt. In the context of the PromptDJ MIDI project, prompt weight influences the AI's generation, and this knob provides a tangible interface for adjusting it.\n\n### Visual Representation\n\n- **Knob Design:** The component renders a stylized circular knob with a background gradient and a foreground arc that indicates the current `value` (weight). A moving dot on the arc signifies the exact position of the weight.\n- **Halo Effect:** A dynamic halo effect surrounds the knob. Its size and visibility are determined by the current `value` and the `audioLevel` property. The halo's color is set by the `color` property, making it visually distinct for different prompts.\n- **Color Mapping:** The `color` property defines the primary color used for the halo and the foreground arc, directly linking the knob's appearance to the prompt it controls.\n- **Audio Level Reactivity:** The `audioLevel` property influences the halo's scale, making the visual feedback more dynamic and responsive to the audio output.\n\n### Interactive Features\n\n- **Pointer Interaction:** Users can click and drag vertically on the knob to adjust its `value`. The `dragStartPos` and `dragStartValue` properties track the interaction to calculate the change in value.\n- **Mouse Wheel Interaction:** The knob also supports mouse wheel scrolling (`@wheel` event) for fine-tuning the `value`.\n- **Input Event:** When the `value` is changed through interaction (drag or wheel), the component dispatches an `input` event with the new `value` as its detail. This allows parent components to update their state accordingly.\n- **Value Clamping:** The `value` is clamped between 0 and 2, ensuring it stays within the expected range for prompt weighting.\n\n### Properties\n\n- `value` (Number): Represents the current weight of the prompt, ranging from 0 to 2. Default is 0.\n- `color` (String): The color associated with the prompt, used for the halo and the active arc. Default is '#000'.\n- `audioLevel` (Number): A value between 0 and 1 representing the current audio analysis level, used to modify the halo's scale.\n\n### Events\n\n- `input`: Dispatched whenever the knob's `value` changes due to user interaction. The event detail contains the new numeric value.","artifact":{"task":"T28","files":[{"path":"components/WeightKnob.ts.md","content":"## Component: WeightKnob\n\n### Purpose\n\nThe `WeightKnob` component is a custom web component that visually represents and allows interaction with the 'weight' of a musical prompt. In the context of the PromptDJ MIDI project, prompt weight influences the AI's generation, and this knob provides a tangible interface for adjusting it.\n\n### Visual Representation\n\n- **Knob Design:** The component renders a stylized circular knob with a background gradient and a foreground arc that indicates the current `value` (weight). A moving dot on the arc signifies the exact position of the weight.\n- **Halo Effect:** A dynamic halo effect surrounds the knob. Its size and visibility are determined by the current `value` and the `audioLevel` property. The halo's color is set by the `color` property, making it visually distinct for different prompts.\n- **Color Mapping:** The `color` property defines the primary color used for the halo and the foreground arc, directly linking the knob's appearance to the prompt it controls.\n- **Audio Level Reactivity:** The `audioLevel` property influences the halo's scale, making the visual feedback more dynamic and responsive to the audio output.\n\n### Interactive Features\n\n- **Pointer Interaction:** Users can click and drag vertically on the knob to adjust its `value`. The `dragStartPos` and `dragStartValue` properties track the interaction to calculate the change in value.\n- **Mouse Wheel Interaction:** The knob also supports mouse wheel scrolling (`@wheel` event) for fine-tuning the `value`.\n- **Input Event:** When the `value` is changed through interaction (drag or wheel), the component dispatches an `input` event with the new `value` as its detail. This allows parent components to update their state accordingly.\n- **Value Clamping:** The `value` is clamped between 0 and 2, ensuring it stays within the expected range for prompt weighting.\n\n### Properties\n\n- `value` (Number): Represents the current weight of the prompt, ranging from 0 to 2. Default is 0.\n- `color` (String): The color associated with the prompt, used for the halo and the active arc. Default is '#000'.\n- `audioLevel` (Number): A value between 0 and 1 representing the current audio analysis level, used to modify the halo's scale.\n\n### Events\n\n- `input`: Dispatched whenever the knob's `value` changes due to user interaction. The event detail contains the new numeric value."}]},"team":null,"reasoning":null}