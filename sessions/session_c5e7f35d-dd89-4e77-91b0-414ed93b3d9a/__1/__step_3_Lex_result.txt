{"output":"The following is the documentation for the `README.md` file of the PromptDJ MIDI myfirstanalog project. This README provides a high-level overview of the project and instructions for setting it up and running it.","artifact":{"task":"T4","files":[{"path":"README.md","content":"# PromptDJ MIDI myfirstanalog\n\n<div align=\"center\">\n\n<img width=\"1200\" height=\"475\" alt=\"GHBanner\" src=\"https://github.com/user-attachments/assets/0aa67016-6eaf-458a-adb2-6e31a0763ed6\" />\n\n  <h1>Built with AI Studio</h1>\n\n  <p>The fastest path from prompt to production with Gemini.</p>\n\n  <a href=\"https://aistudio.google.com/apps\">Start building</a>\n\n</div>\n\n## Overview\n\nPromptDJ MIDI myfirstanalog is a creative application that bridges the gap between MIDI controllers and AI-powered music generation. It allows users to control real-time music creation using a MIDI controller, mapping its inputs to various parameters of AI-generated music. This project leverages Google's Gemini models (specifically the `lyria-realtime-exp` model) to produce dynamic and responsive musical outputs.\n\n## Features\n\n*   **Real-time AI Music Generation:** Utilizes advanced AI models to create music on the fly.\n*   **MIDI Control Integration:** Seamlessly integrates with MIDI controllers, allowing for intuitive control over musical parameters.\n*   **Prompt-Based Control:** Users can define text prompts that influence the AI's musical output.\n*   **Dynamic Prompt Weighting:** Adjust the influence of each prompt in real-time using MIDI CC messages.\n*   **Web-Based Interface:** Built with LitElement for a modern, component-based frontend.\n*   **Audio Analysis:** Includes utilities for analyzing audio levels, potentially for visual feedback or further control.\n\n## Setup and Running the Project\n\nThis project is built using Vite and TypeScript.\n\n### Prerequisites\n\n*   Node.js and npm (or yarn/pnpm)\n*   A MIDI controller (optional, but recommended for full functionality)\n\n### Installation\n\n1.  **Clone the repository:**\n    ```bash\n    git clone <repository-url>\n    cd promptdj-midi-myfirstanalog\n    ```\n\n2.  **Install dependencies:**\n    ```bash\n    npm install\n    ```\n\n### Configuration\n\n*   **API Key:** This project requires a Google Gemini API key. You need to set this as an environment variable:\n    *   Create a `.env` file in the root of the project directory.\n    *   Add the following line to your `.env` file, replacing `<YOUR_API_KEY>` with your actual Gemini API key:\n        ```\n        GEMINI_API_KEY=<YOUR_API_KEY>\n        ```\n    *   Alternatively, you can set the `GEMINI_API_KEY` environment variable in your system.\n\n### Running the Development Server\n\n1.  **Start the development server:**\n    ```bash\n    npm run dev\n    ```\n\n2.  Open your web browser and navigate to `http://localhost:3000` (or the port specified in `vite.config.ts`).\n\n### Building for Production\n\nTo create a production-ready build:\n\n```bash\nnpm run build\n```\n\nThis will compile and bundle your application into the `dist` directory.\n\n## Usage\n\nOnce the application is running:\n\n1.  **MIDI Controller:** Connect your MIDI controller. The application should automatically detect available MIDI devices.\n2.  **Select MIDI Device:** If multiple MIDI devices are connected, you can select the desired one from the dropdown menu labeled \"MIDI\" in the top-left corner.\n3.  **Control Prompts:** Use the interactive knobs and text fields to adjust prompt weights and text.\n4.  **MIDI Mapping:** Enter \"Learn\" mode by clicking the \"CC:X\" label (where X is the current MIDI CC number) associated with each prompt controller. Then, move a fader or knob on your MIDI controller. The application will learn that CC message for controlling the weight of that specific prompt.\n5.  **Playback:** Use the central Play/Pause button to start and stop the AI music generation.\n\n## Contributing\n\nContributions are welcome! Please refer to the `CONTRIBUTING.md` file (if available) for guidelines on how to contribute to this project.\n\n## License\n\nThis project is licensed under the Apache-2.0 License. See the `LICENSE` file for more details.\n"}]},"team":null,"reasoning":null}